(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{733:function(s,t,a){"use strict";a.r(t);var e=a(137),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"一、centos7-安装-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、centos7-安装-docker"}},[s._v("#")]),s._v(" 一、Centos7 安装 Docker")]),s._v(" "),a("p",[s._v("官网安装教程："),a("a",{attrs:{href:"https://docs.docker.com/engine/install/centos/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://docs.docker.com/engine/install/centos/")])]),s._v(" "),a("h3",{attrs:{id:"_01-需要的安装包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_01-需要的安装包"}},[s._v("#")]),s._v(" 01 | 需要的安装包")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y yum-utils\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("如果一直找不到镜像，请更换yum源，详细内容请参考：https://blog.csdn.net/wangshuai6707/article/details/104609213/")])]),s._v(" "),a("h3",{attrs:{id:"_02-设置镜像的仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_02-设置镜像的仓库"}},[s._v("#")]),s._v(" 02 | 设置镜像的仓库")]),s._v(" "),a("p",[s._v("换成国内的阿里云镜像，速度很快！")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum-config-manager "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n   --add-repo "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n   http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n")])])]),a("h3",{attrs:{id:"_03-安装docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_03-安装docker"}},[s._v("#")]),s._v(" 03 | 安装Docker")]),s._v(" "),a("p",[s._v("社区版 "),a("code",[s._v("docker-ce")]),s._v(" ("),a("strong",[s._v("官方推荐")]),s._v(")")]),s._v(" "),a("p",[s._v("企业版 "),a("code",[s._v("docker-ee")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker-ce docker-ce-cli containerd.io\n\n")])])]),a("h3",{attrs:{id:"_04-启动docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_04-启动docker"}},[s._v("#")]),s._v(" 04 | 启动Docker")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动docker")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" docker start\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止docker")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" docker stop\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启docker")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" docker restart\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("设置Docker开机自启动："),a("code",[s._v("systemctl enable docker")]),s._v("，避免将Linux系统重启后总是需要手动去启动Docker")])]),s._v(" "),a("h2",{attrs:{id:"二、安装-gitlab"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、安装-gitlab"}},[s._v("#")]),s._v(" 二、安装 Gitlab")]),s._v(" "),a("h3",{attrs:{id:"_01-搜索镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_01-搜索镜像"}},[s._v("#")]),s._v(" 01| 搜索镜像")]),s._v(" "),a("p",[s._v("可以使用"),a("code",[s._v("docker search")]),s._v("搜索命令查看：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@DevStudio ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$docker")]),s._v(" search gitlab\nNAME                                         DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED\ngitlab/gitlab-ce                             GitLab Community Edition docker image based …   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3457")]),s._v("                 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nsameersbn/gitlab                             Dockerfile to build a GitLab image "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the D…   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1180")]),s._v("                 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\ngitlab/gitlab-runner                         GitLab CI Multi Runner used to fetch and run…   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("749")]),s._v("                  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\ngitlab/gitlab-ee                             GitLab Enterprise Edition docker image based…   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("286")]),s._v("                  \ntwang2218/gitlab-ce-zh                       汉化的 GitLab 社区版 Docker Image                     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("251")]),s._v("                  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\njangrewe/gitlab-ci-android                   GitLab CI image "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" building Android apps       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nedbizarro/gitlab-ci-pipeline-php             Docker images "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" build and "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" PHP applica…   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("38")]),s._v("                   \nulm0/gitlab                                  GitLab Docker image "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" ARM                     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("36")]),s._v("                   \ngitlab/gitlab-runner-helper                                                                  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("35")]),s._v("                   \nklud/gitlab-runner                           GitLab Runner "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" ARM devices                   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("27")]),s._v("                   \ncenturylink/gitlab                           This image uses the image from sameersbn / g…   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nciricihq/gitlab-sonar-scanner                Gitlab Docker container to run sonar-scanner…   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\ngitlab/gitlab-ce-qa                          GitLab QA has a "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" suite that allows end-t…   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("                    \ntimoschwarzer/gitlab-monitor                 A browser-based monitor dashboard "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" GitLab…   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nsgillespie/gitlab-runner                     A Dockerized GitLab Runner that automaticall…   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nsamcontesse/gitlab-merge-request-resource    A concourse resource to check "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" new merge …   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nmastertinner/gitlab-merge-request-resource   A concourse resource to check "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" new merge …   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nboldcommerce/gitlab-merge-request-resource   Reverted build of Swisscom's resource "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("until")]),s._v(" …   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nstanfordlegion/gitlab-ci                     An image "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" Gitlab CI.                         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nlorands/gitlab-merge-request-resource        This is a fork of swisscom/gitlab-merge-requ…   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nadamkl/gitlab-merge-request-resource         Customized with support "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" gitlab "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" on di…   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nedtan1/gitlab-merge-request-resource         GitLab Merge Request resource "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" ConcourseCI   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\ngitlab/gitlab-ee-qa                          GitLab QA has a "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" suite that allows end-t…   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                    \nmvisonneau/gitlab-ci-pipelines-exporter      Prometheus / OpenMetrics exporter "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" GitLab…   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),a("h3",{attrs:{id:"_02-拉取镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_02-拉取镜像"}},[s._v("#")]),s._v(" 02 | 拉取镜像")]),s._v(" "),a("p",[a("code",[s._v("gitlab-ce")]),s._v("为稳定版本，后面不填写版本则默认pull最新latest版本")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ docker pull gitlab/gitlab-ce\n")])])]),a("h3",{attrs:{id:"_03-运行容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_03-运行容器"}},[s._v("#")]),s._v(" 03 | 运行容器")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ docker run -d  -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("443")]),s._v(":443 -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(":80 -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("222")]),s._v(":22 --name gitlab --restart always -v /home/gitlab/config:/etc/gitlab -v /home/gitlab/logs:/var/log/gitlab -v /home/gitlab/data:/var/opt/gitlab gitlab/gitlab-ce\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -d：后台运行")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -p：将容器内部端口向外映射")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --name：命名容器名称")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -v：将容器内数据文件夹或者日志、配置等文件夹挂载到宿主机指定目录")]),s._v("\n")])])]),a("h3",{attrs:{id:"_04-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_04-配置"}},[s._v("#")]),s._v(" 04 | 配置")]),s._v(" "),a("p",[s._v("在Gitlab上创建项目的时候，生成项目的URL访问地址是按容器的"),a("code",[s._v("hostname")]),s._v("来生成的，也就是容器的id。作为Gitlab服务器，我们需要一个固定的URL访问地址，于是需要配置"),a("code",[s._v("gitlab.rb")]),s._v("（宿主机路径："),a("code",[s._v("/home/gitlab/config/gitlab.rb")]),s._v("）")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gitlab.rb文件内容默认全是注释")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /home/gitlab/config/gitlab.rb\n")])])]),a("p",[s._v("配置内容：")]),s._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置http协议所使用的访问地址,不加端口号默认为80")]),s._v("\nexternal_url "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'http://172.22.27.163'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置ssh协议所使用的访问地址和端口")]),s._v("\ngitlab_rails"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'gitlab_ssh_host'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'172.22.27.163'")]),s._v("\ngitlab_rails"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'gitlab_shell_ssh_port'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("222")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 此端口是run时22端口映射的222端口")]),s._v("\n")])])]),a("p",[s._v("配置好后需要重启一下容器：")]),s._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启gitlab容器")]),s._v("\n$ docker restart gitlab\n")])])]),a("p",[s._v("此时项目的仓库地址就变了。如果ssh端口地址不是默认的22，就会加上ssh:// 协议头。 打开浏览器输入ip地址(如果端口号不是80，则打开为：ip:端口号)")]),s._v(" "),a("p",[s._v("登录管理员账户"),a("code",[s._v("root")]),s._v("，初始密码放在了一个临时文件中"),a("code",[s._v("/etc/gitlab/initial_root_password")]),s._v("，这个文件将在首次执行reconfigure后24小时自动删除")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@DevStudio ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it gitlab "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进去容器内部")]),s._v("\nroot@e8d76c250652:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# vi /etc/gitlab/initial_root_password")]),s._v("\n\n")])])]),a("p",[a("img",{attrs:{src:"https://gitee.com/small-universe/file-bed/raw/master/tools/Gitlab/2021-11-16-21:11:44-image-20211116211013722.png",alt:"image-20211116211013722"}})]),s._v(" "),a("h2",{attrs:{id:"三、安装-jenkins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、安装-jenkins"}},[s._v("#")]),s._v(" 三、安装 Jenkins")]),s._v(" "),a("h3",{attrs:{id:"_01-选择拉取中文版的-jenkins-镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_01-选择拉取中文版的-jenkins-镜像"}},[s._v("#")]),s._v(" 01 | 选择拉取中文版的 Jenkins 镜像")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("docker pull jenkinszh/jenkins-zh\n")])])]),a("p",[s._v("修改标签（生成新的镜像）")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("docker tag jenkinszh/jenkins-zh ct_test:jenkins\n")])])]),a("p",[a("img",{attrs:{src:"https://gitee.com/small-universe/file-bed/raw/master/tools/Jenkins/2021-11-26-10:59:49-image-20210817105910674.png",alt:"image-20210817105910674"}})]),s._v(" "),a("h3",{attrs:{id:"_02-创建-jenkins-挂载目录并授权权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_02-创建-jenkins-挂载目录并授权权限"}},[s._v("#")]),s._v(" 02 | 创建 Jenkins 挂载目录并授权权限")]),s._v(" "),a("p",[s._v("在主机上先创建容器test_jenkins的一个挂载目录"),a("code",[s._v("D:\\env_local\\docker_mount\\test_jenkins")])]),s._v(" "),a("blockquote",[a("p",[s._v("TIP：本机安装了"),a("a",{attrs:{href:"https://www.cygwin.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Cygwin")])]),s._v(" "),a("p",[a("code",[s._v("D:\\env_local\\docker_mount\\test_jenkins")]),s._v("会被映射为 "),a("code",[s._v("/cygdrive/d/env_local/docker_mount/test_jenkins")])])]),s._v(" "),a("h3",{attrs:{id:"_03-创建并启动-jenkins-容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_03-创建并启动-jenkins-容器"}},[s._v("#")]),s._v(" 03 | 创建并启动 Jenkins 容器")]),s._v(" "),a("p",[s._v("命令如下，别着急执行命令，记得改路径")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("docker run -d -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1080")]),s._v(":8080 -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1022")]),s._v(":22 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-v  /d/env_local/docker_mount/test_jenkins/jenkins:/var/jenkins_home "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-v   /d/env_local/docker_mount/test_jenkins/apache-maven-3.8.1:/usr/local/maven "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--name test_jenkins ct_test:jenkins\n\n")])])]),a("p",[s._v("启动后报错：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("touch: cannot "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/var/jenkins_home/copy_reference_file.log'")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" Permission denied\n\ntouch: cannot "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/var/jenkins_home/copy_reference_file.log'")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" Permission denied\n\n\nCan not "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),s._v(" to /var/jenkins_home/copy_reference_file.log. Wrong volume permissions?\n\nCan not "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),s._v(" to /var/jenkins_home/copy_reference_file.log. Wrong volume permissions?\n")])])]),a("p",[s._v("解决办法：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("docker run -d -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1080")]),s._v(":8080 -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1022")]),s._v(":22 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-v  /cygdrive/d/env_local/docker_mount/test_jenkins/jenkins:/var/jenkins_home "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-v  /cygdrive/d/env_local/docker_mount/test_jenkins/apache-maven-3.8.1:/usr/local/maven "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-u "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" --name test_jenkins ct_test:jenkins\n")])])]),a("p",[s._v("这命令的意思是覆盖容器中内置的帐号，该用外部传入，这里传入0代表的是root帐号Id。这样再启动的时候就应该没问题了")]),s._v(" "),a("p",[a("strong",[s._v("标注一下几个参数的意思")])]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("-d 后台运行镜像\n\n-p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1080")]),s._v(":8080 意义： 将镜像的8080端口映射到主机的1080端口\n\n-p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1022")]),s._v(":22 意义：将镜像的22端口映射到主机的1022端口\n\n-v /cygdrive/d/env_local/docker_mount/jenkins:/var/jenkins_home \n意义： /var/jenkins_home目录为容器jenkins工作目录，我们将硬盘上的一个目录挂载到这个位置，方便后续更新镜像后继续使用原来的工作目录。这里我们设置的就是上面我们创建的/cygdrive/d/env_local/docker_mount/jenkins目录\n\n-v /cygdrive/d/env_local/docker_mount/apache-maven-3.8.1:/usr/local/maven \n意义：挂载本地maven，前面是主机上的，后面是挂载到容器上的目录\n\n-v /etc/localtime:/etc/localtime 意义：让容器使用和服务器同样的时间设置。\n\n--name test_jenkins 意义：给容器起一个别名\n")])])]),a("p",[a("strong",[s._v("启动后的效果，这里会给出初始登录密码")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/small-universe/file-bed/raw/master/tools/Jenkins/2021-11-26-10:59:55-image-20210817125759007.png",alt:"image-20210817125759007"}})]),s._v(" "),a("blockquote",[a("p",[s._v("如果删除容器再重新执行命令，你会发现可能这里就没有密码提示，这是因为我们在命令中进行了docker卷的映射，第一次初始化容器后即使是删除了容器，我们之前的配置也会保留下来")])]),s._v(" "),a("h3",{attrs:{id:"_04-登录-jenkins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_04-登录-jenkins"}},[s._v("#")]),s._v(" 04 | 登录 Jenkins")]),s._v(" "),a("p",[s._v("启动好镜像我们就可以进行配置了，Jenkins是一个web服务，所以我们直接使用web端口访问即可。")]),s._v(" "),a("p",[s._v("由于我们上面docker配置的是1080端口，去访问"),a("code",[s._v("http://localhost:1080")]),s._v("即可，如果是云服务器，还需要开放"),a("strong",[s._v("安全组")]),s._v("的1080端口")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/small-universe/file-bed/raw/master/tools/Jenkins/2021-11-26-10:59:59-image-20210817140606764.png",alt:"image-20210817140606764"}})]),s._v(" "),a("p",[s._v("默认的登录密码放置在"),a("code",[s._v("/var/jenkins_home/secrets/initialAdminPassword")]),s._v("里，可以进入容器内查看")]),s._v(" "),a("p",[s._v("进入容器查看：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("Administrator@DESKTOP-TVEH0VN /cygdrive/d/env_local/docker_mount\n$ docker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it test_jenkins "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\nroot@396bfac65bc1:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat /var/jenkins_home/secrets/initialAdminPassword")]),s._v("\ndbf7ec5b37634f97a1124d2d18996448\nroot@396bfac65bc1:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n")])])]),a("p",[s._v("输入密码后，选择安装推荐的插件即可")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/small-universe/file-bed/raw/master/tools/Jenkins/2021-11-26-11:00:03-image-20210817134013161.png",alt:"image-20210817134013161"}})]),s._v(" "),a("p",[s._v("Docker容器的方式启动jenkins还是比较好的，软件安装速度比较快，应该是默认使用了国内镜像")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/small-universe/file-bed/raw/master/tools/Jenkins/2021-11-26-11:00:13-image-20210817134126442.png",alt:"image-20210817134126442"}})]),s._v(" "),a("h3",{attrs:{id:"_05-创建一个管理员用户"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_05-创建一个管理员用户"}},[s._v("#")]),s._v(" 05 | 创建一个管理员用户")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/small-universe/file-bed/raw/master/tools/Jenkins/2021-11-26-11:00:18-image-20210817134612682.png",alt:"image-20210817134612682"}})]),s._v(" "),a("blockquote",[a("p",[s._v("实例配置，暂时默认即可")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/small-universe/file-bed/raw/master/tools/Jenkins/2021-11-26-11:00:22-image-20210817134739214.png",alt:"image-20210817134739214"}})]),s._v(" "),a("h3",{attrs:{id:"_06-进入到-jenkins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_06-进入到-jenkins"}},[s._v("#")]),s._v(" 06 | 进入到 Jenkins")]),s._v(" "),a("p",[s._v("最后成功进入到 Jenkins 中")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/small-universe/file-bed/raw/master/tools/Jenkins/2021-11-26-11:00:26-image-20210817143055344.png",alt:"image-20210817143055344"}})]),s._v(" "),a("h3",{attrs:{id:"_07-安装插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_07-安装插件"}},[s._v("#")]),s._v(" 07 | 安装插件")]),s._v(" "),a("p",[s._v("一个是"),a("strong",[s._v("publish over ssh")]),s._v("，一个是"),a("strong",[s._v("Maven Integration")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/small-universe/file-bed/raw/master/tools/Jenkins/2021-11-26-11:00:29-image-20210817143612496.png",alt:"image-20210817143612496"}})]),s._v(" "),a("p",[s._v("安装插件完成后我们需要配置Maven环境和JDK环境")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/small-universe/file-bed/raw/master/tools/Jenkins/2021-11-26-14:38:04-image-20210817144202245.png",alt:"image-20210817144202245"}})]),s._v(" "),a("p",[s._v("点击全局配置后进行JDK和Maven的配置")]),s._v(" "),a("h3",{attrs:{id:"_08-配置-jdk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_08-配置-jdk"}},[s._v("#")]),s._v(" 08 | 配置 JDK")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/small-universe/file-bed/raw/master/tools/Jenkins/2021-11-26-11:00:33-image-20210817145713295.png",alt:"image-20210817145713295"}})]),s._v(" "),a("h3",{attrs:{id:"_09-配置-maven"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_09-配置-maven"}},[s._v("#")]),s._v(" 09 | 配置 Maven")]),s._v(" "),a("p",[s._v("配置maven为刚才挂载的maven路径，也就是"),a("code",[s._v("/usr/local/maven")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/small-universe/file-bed/raw/master/tools/Jenkins/2021-11-26-11:00:40-image-20210817150028847.png",alt:"image-20210817150028847"}})]),s._v(" "),a("h2",{attrs:{id:"四、docker-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、docker-compose"}},[s._v("#")]),s._v(" 四、Docker Compose")]),s._v(" "),a("p",[s._v("上面单独安装各个容器主要为了熟悉各个工具的配置使用，现在我们需要使用"),a("code",[s._v("Docker Compose")]),s._v("进行容器编排，当我们部署多个服务时不再那么繁琐的一个个去启动容器")]),s._v(" "),a("div",{staticClass:"custom-block info"},[a("p",{staticClass:"custom-block-title"},[s._v("参考")]),s._v(" "),a("p",[s._v("官方文档："),a("a",{attrs:{href:"https://docs.docker.com/compose/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://docs.docker.com/compose/")])]),s._v(" "),a("p",[s._v("菜鸟教程："),a("a",{attrs:{href:"https://www.runoob.com/docker/docker-compose.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.runoob.com/docker/docker-compose.html")])])]),s._v(" "),a("h3",{attrs:{id:"_01-安装-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_01-安装-compose"}},[s._v("#")]),s._v(" 01 | 安装 Compose")]),s._v(" "),a("p",[s._v("在 Linux 上的也安装十分简单，从 "),a("a",{attrs:{href:"https://github.com/docker/compose/releases",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方 GitHub Release")]),s._v(" 处直接下载编译好的二进制文件即可。")]),s._v(" "),a("p",[s._v("在 Linux 64 位系统上直接下载对应的二进制包")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当前最新发行版1.29.2 要安装其他版本的 Compose 请替换1.29.2")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -s"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("-"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -m"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v(" -o /usr/local/bin/docker-compose\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 国内用户可以使用以下方式加快下载")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L https://download.fastgit.org/docker/compose/releases/download/1.29.2/docker-compose-"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -s"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("-"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -m"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('" -o /usr/local/bin/docker-compose\n\n'),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加执行权限")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x /usr/local/bin/docker-compose\n\ndocker-compose --version "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看版本")]),s._v("\nDocker Compose version v2.1.1\n")])])]),a("p",[s._v("如果docker-compose不在"),a("code",[s._v("/usr/local/bin/")]),s._v("目录下，需要创建软链")]),s._v(" "),a("p",[s._v("比如我们把docker-compose的二进制文件放到了"),a("code",[s._v("/opt")]),s._v("目录下，那么需要执行下面的命令")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -s /opt/docker-compose /usr/local/bin/docker-compose \n")])])]),a("h3",{attrs:{id:"_02-卸载-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_02-卸载-compose"}},[s._v("#")]),s._v(" 02 | 卸载 Compose")]),s._v(" "),a("p",[s._v("二进制包方式安装的，删除二进制文件即可")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" /usr/local/bin/docker-compose\n")])])]),a("h3",{attrs:{id:"_03-yml文件配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_03-yml文件配置"}},[s._v("#")]),s._v(" 03 | yml文件配置")]),s._v(" "),a("p",[s._v("Compose 面向项目进行管理，Compose 两个简单的概念")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("项目 ("),a("code",[s._v("project")]),s._v(")：由一组关联的应用容器组成的一个完整业务单元。")]),s._v(" "),a("p",[s._v("一个项目可以由多个服务（容器）关联而成")])]),s._v(" "),a("li",[a("p",[s._v("服务 ("),a("code",[s._v("service")]),s._v(")：一个应用容器，实际上可以运行多个相同镜像的实例")])])]),s._v(" "),a("p",[s._v("如下，一个简单的"),a("code",[s._v("docker-compose.yml")]),s._v("文件")]),s._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定本 yml 依从的 compose 哪个版本制定的")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3.9"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 服务（容器组）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nginx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器名")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用的镜像")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 卷挂载")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /mnt/nginx/nginx.conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/etc/nginx/nginx.conf\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /mnt/nginx/html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/usr/share/nginx/html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("ro\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /mnt/nginx/conf.d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/etc/nginx/conf.d\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /mnt/nginx/logs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/var/log/nginx\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 端口隐射")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token datetime number"}},[s._v("80:80")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 网络")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" infra\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定容器退出后的重启策略为始终重启")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" always\n\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器名")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nps\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 镜像")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ffdfgdfg/nps\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 卷挂载")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /mnt/nps/conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/conf\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 端口映射")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 7070"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("7100"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("7070"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7100")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 网络")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" infra\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定容器退出后的重启策略为始终重启")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" always\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定网络")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认网络")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("default")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用已存在的网络")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("external")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" bridge\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("infra")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 网络名称 如不指定, 运行之后网络名称会变成 app_infra (假如当前目录是app的情况)")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" infra\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 网桥 host, bridge, overlay 等选项中的一种")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("driver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" bridge\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("frontend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("driver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" custom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("driver\n\n")])])]),a("h3",{attrs:{id:"_04-构建和运行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_04-构建和运行"}},[s._v("#")]),s._v(" 04 | 构建和运行")]),s._v(" "),a("p",[s._v("在测试目录中，执行以下命令来启动应用程序：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("docker-compose up\n")])])]),a("p",[s._v("如果你想在后台执行该服务可以加上 "),a("strong",[s._v("-d")]),s._v(" 参数：")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("docker-compose up -d\n")])])]),a("p",[a("img",{attrs:{src:"https://gitee.com/small-universe/file-bed/raw/master/tools/Docker/2021-11-27-22:16:08-image-20211127221505838.png",alt:"image-20211127221505838"}})]),s._v(" "),a("p",[s._v("通过上图实验，我们的"),a("code",[s._v("frontend")]),s._v("网络并没有创建成功")]),s._v(" "),a("p",[s._v("官网的示例里"),a("code",[s._v("driver: custom-driver")]),s._v("是需要把 "),a("code",[s._v("custom-driver")]),s._v("换成 "),a("code",[s._v("host, bridge, overlay")]),s._v(" 等选项中的一种")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@iZwz90pj2xzabkyltd9fbmZ ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker network ls")]),s._v("\nNETWORK ID     NAME      DRIVER    SCOPE\n08b9585f3fdb   bridge    bridge    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认桥接网络")]),s._v("\n2db171ed04b3   "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器与宿主机直连")]),s._v("\nf1bee4789db5   infra     bridge    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 自定义桥接网络")]),s._v("\n74f7f0f2b925   none      null      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("\n\n")])])]),a("p",[s._v("我们把"),a("code",[s._v("frontend")]),s._v("网络重新设置成"),a("code",[s._v("bridge")]),s._v("，并让nps连接到"),a("code",[s._v("frontend")])]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("  nps:\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器名")]),s._v("\n    container_name: nps\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 镜像")]),s._v("\n    image: ffdfgdfg/nps\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 卷挂载")]),s._v("\n    volumes:\n      - /mnt/nps/conf:/conf\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 端口映射")]),s._v("\n    ports:\n      - "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7070")]),s._v("-7100:7070-7100\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 网络")]),s._v("\n    networks:\n      - infra\n      - frontend\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定容器退出后的重启策略为始终重启")]),s._v("\n    restart: always\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定网络")]),s._v("\nnetworks:\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认网络")]),s._v("\n  default:\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用已存在的网络")]),s._v("\n    external:\n      name: bridge\n  infra:\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 网络名称 如不指定, 运行之后网络名称会变成 app_infra (假如当前目录是app的情况)")]),s._v("\n    name: infra\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 网桥 host, bridge, overlay 等选项中的一种")]),s._v("\n    driver: bridge\n  frontend:\n    driver: bridge\n")])])]),a("p",[s._v("启动后的效果")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/small-universe/file-bed/raw/master/tools/Docker/2021-11-27-22:38:52-image-20211127223852144.png",alt:"image-20211127223852144"}})])])}),[],!1,null,null,null);t.default=n.exports}}]);