(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{726:function(t,a,s){"use strict";s.r(a);var e=s(137),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("参考:")])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2019/04/oauth_design.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("OAuth2.0 的一个简单解释——阮一峰")])]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2019/04/oauth-grant-types.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("OAuth2.0 的四种方式——阮一峰")])]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2019/04/github-oauth.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub OAuth 第三方登录示例教程——阮一峰")])])]),t._v(" "),s("blockquote",[s("p",[t._v("Demo:")])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://gitee.com/small-universe/DjangoOauth",target:"_blank",rel:"noopener noreferrer"}},[t._v("Django框架使用 OAuth2.0 的示例")])])]),t._v(" "),s("h2",{attrs:{id:"_1-oauth2-0-简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-oauth2-0-简介"}},[t._v("#")]),t._v(" 1 | OAuth2.0 简介")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://baike.baidu.com/item/OAuth2.0/6788617?fr=aladdin",target:"_blank",rel:"noopener noreferrer"}},[t._v("百度百科")])]),t._v(" "),s("p",[t._v("==OAuth（开放授权）==是一个开放标准，允许用户让第三方应用访问该用户在某一网站上存储的私密的资源（如照片，视频，联系人列表），而无需将用户名和密码提供给第三方应用")]),t._v(" "),s("p",[t._v("OAuth2.0是OAuth协议的延续版本，但不向前兼容OAuth 1.0(即完全废止了OAuth1.0)。")]),t._v(" "),s("p",[t._v("OAuth2.0关注客户端开发者的简易性。")]),t._v(" "),s("p",[t._v("要么通过==组织在资源拥有者和HTTP服务商之间的被批准的==交互动作代表用户，要么允许第三方应用代表用户获得访问的权限。同时为Web应用，桌面应用和手机，和起居室设备提供专门的认证流程。")]),t._v(" "),s("p",[t._v("2012年10月，OAuth2.0协议正式发布为"),s("a",{attrs:{href:"https://tools.ietf.org/html/rfc6749",target:"_blank",rel:"noopener noreferrer"}},[t._v("RFC 6749")])]),t._v(" "),s("h2",{attrs:{id:"_2-通俗的理解-oauth2-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-通俗的理解-oauth2-0"}},[t._v("#")]),t._v(" 2| 通俗的理解 OAuth2.0")]),t._v(" "),s("p",[t._v("以快递员问题来理解OAuth的验证方式")]),t._v(" "),s("ul",[s("li",[t._v("我住在一个大型的居民小区")]),t._v(" "),s("li",[t._v("小区有门禁系统")]),t._v(" "),s("li",[t._v("进入的时候需要密码")]),t._v(" "),s("li",[t._v("我经常网购和外卖，每天都有快递员来送货。我必须找到一个办法，让快递员通过门禁系统，进入小区")]),t._v(" "),s("li",[t._v("如果我把自己的密码，告诉快递员，他就拥有了与我同样的权限，这样好像不太合适。万一我想取消他进入小区的权力，也很麻烦，我自己的密码也得跟着改了，还得通知其他的快递员")])]),t._v(" "),s("blockquote",[s("p",[t._v("有没有一种办法，让快递员能够自由进入小区，又不必知道小区居民的密码，而且他的唯一权限就是送货，其他需要密码的场合，他都没有权限？")])]),t._v(" "),s("p",[t._v("于是，我们设计这样的一套授权机制")]),t._v(" "),s("p",[t._v('**第一步，**门禁系统的密码输入器下面，增加一个按钮，叫做"获取授权"。快递员需要首先按这个按钮，去申请授权。')]),t._v(" "),s("p",[t._v("**第二步，**他按下按钮以后，我的手机就会跳出对话框：有人正在要求授权。系统还会显示该快递员的姓名、工号和所属的快递公司。")]),t._v(" "),s("p",[t._v("我确认请求属实，就点击按钮，告诉门禁系统，我同意给予他进入小区的授权。")]),t._v(" "),s("p",[t._v("**第三步，**门禁系统得到我的确认以后，向快递员显示一个进入小区的令牌（access token）。令牌就是类似密码的一串数字，只在短期内（比如七天）有效。")]),t._v(" "),s("p",[t._v("**第四步，**快递员向门禁系统输入令牌，进入小区。")]),t._v(" "),s("blockquote",[s("p",[t._v("有人可能会问，为什么不是远程为快递员开门，而要为他单独生成一个令牌？")])]),t._v(" "),s("p",[t._v("这是因为快递员可能每天都会来送货，第二天他还可以复用这个令牌。另外，有的小区有多重门禁，快递员可以使用同一个令牌通过它们。")]),t._v(" "),s("p",[s("strong",[t._v("我们把上面的例子映射到互联网，就是 OAuth2.0 的设计了。")])]),t._v(" "),s("p",[t._v('首先，居民小区就是储存用户数据的网络服务。比如，微信储存了我的好友信息，获取这些信息，就必须经过微信的"门禁系统"。')]),t._v(" "),s("p",[t._v("其次，快递员（或者说快递公司）就是第三方应用，想要穿过门禁系统，进入小区。")]),t._v(" "),s("p",[t._v("最后，我就是用户本人，同意授权第三方应用进入小区，获取我的数据。")]),t._v(" "),s("p",[s("strong",[t._v("专业点的解释")])]),t._v(" "),s("p",[t._v("在认证和授权的过程中涉及的三方包括：")]),t._v(" "),s("p",[s("strong",[t._v("1、服务提供方")]),t._v("，用户使用服务提供方来存储受保护的资源，如照片，视频，联系人列表。")]),t._v(" "),s("p",[s("strong",[t._v("2、用户")]),t._v("，存放在服务提供方的受保护的资源的拥有者。")]),t._v(" "),s("p",[s("strong",[t._v("3、客户端")]),t._v("，要访问服务提供方资源的==第三方应用==，通常是网站，如提供照片打印服务的网站。在认证过程之前，客户端要向==服务提供者==申请客户端标识。")]),t._v(" "),s("p",[t._v("使用OAuth进行认证和授权的过程如下所示:（授权码方式）")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/small-universe/file-bed/raw/master/Authentication/OAuth2.0/2021-10-29-13:55:14-image-20210902210420230.png",alt:""}})]),t._v(" "),s("ol",[s("li",[s("p",[t._v("用户想操作存放在服务提供方的资源。")])]),t._v(" "),s("li",[s("p",[t._v("用户登录客户端向服务提供方请求一个临时令牌。")])]),t._v(" "),s("li",[s("p",[t._v("服务提供方验证客户端的身份后，授予一个临时令牌。")])]),t._v(" "),s("li",[s("p",[t._v("客户端获得临时令牌后，将用户引导至服务提供方的授权页面请求用户授权。在这个过程中将临时令牌和客户端的回调连接发送给服务提供方。")])])]),t._v(" "),s("p",[t._v("用户在服务提供方的网页上输入用户名和密码，然后授权该客户端访问所请求的资源。")]),t._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[s("p",[t._v("授权成功后，服务提供方引导用户返回客户端的网页。")])]),t._v(" "),s("li",[s("p",[t._v("客户端根据临时令牌从服务提供方那里获取访问令牌。")])]),t._v(" "),s("li",[s("p",[t._v("服务提供方根据临时令牌和用户的授权情况授予客户端访问令牌。")])]),t._v(" "),s("li",[s("p",[t._v("客户端使用获取的访问令牌访问存放在服务提供方上的受保护的资源。")])])]),t._v(" "),s("h2",{attrs:{id:"_3-令牌与密码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-令牌与密码"}},[t._v("#")]),t._v(" 3 | 令牌与密码")]),t._v(" "),s("p",[t._v("令牌（token）与密码（password）的作用是一样的，都可以进入系统，但是有三点差异。")]),t._v(" "),s("p",[t._v("（1）令牌是短期的，到期会自动失效，用户自己无法修改。密码一般长期有效，用户不修改，就不会发生变化。")]),t._v(" "),s("p",[t._v("（2）令牌可以被数据所有者撤销，会立即失效。以上例而言，屋主可以随时取消快递员的令牌。密码一般不允许被他人撤销。")]),t._v(" "),s("p",[t._v("（3）令牌有权限范围（scope），比如只能进小区的二号门。对于网络服务来说，只读令牌就比读写令牌更安全。密码一般是完整权限。")]),t._v(" "),s("p",[t._v("==上面这些设计，保证了令牌既可以让第三方应用获得权限，同时又随时可控，不会危及系统安全。==这就是 OAuth2.0 的优点。")]),t._v(" "),s("p",[t._v("注意，只要知道了令牌，就能进入系统。系统一般不会再次确认身份，所以"),s("strong",[t._v("令牌必须保密，泄漏令牌与泄漏密码的后果是一样的。")]),t._v(" 这也是为什么令牌的有效期，一般都设置得很短的原因。")]),t._v(" "),s("h2",{attrs:{id:"_4-oauth2-0-的四种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-oauth2-0-的四种方式"}},[t._v("#")]),t._v(" 4 | OAuth2.0 的四种方式")]),t._v(" "),s("p",[t._v("OAuth2.0 对于如何颁发令牌的细节，规定得非常详细。具体来说，一共分成四种授权类型（authorization grant），即四种颁发令牌的方式，适用于不同的互联网场景，你可以选择最适合自己的那一种，向第三方应用颁发令牌。下面就是这四种授权方式：")]),t._v(" "),s("ul",[s("li",[t._v("授权码（authorization-code）")]),t._v(" "),s("li",[t._v("隐藏式（implicit）")]),t._v(" "),s("li",[t._v("密码式（password）：")]),t._v(" "),s("li",[t._v("客户端凭证（client credentials）")])]),t._v(" "),s("blockquote",[s("p",[t._v("注意，不管哪一种授权方式，第三方应用申请令牌之前，都必须"),s("code",[t._v("先到系统备案")]),t._v("，说明自己的身份，然后会拿到两个身份识别码：==客户端 ID（client ID）==和==客户端密钥（client secret）==。这是为了防止令牌被滥用，没有备案过的第三方应用，是不会拿到令牌的。")])]),t._v(" "),s("h3",{attrs:{id:"第一种方式-授权码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一种方式-授权码"}},[t._v("#")]),t._v(" 第一种方式：授权码")]),t._v(" "),s("p",[s("strong",[t._v("授权码（authorization code）方式，指的是第三方应用先申请一个授权码，然后再用该码获取令牌。")])]),t._v(" "),s("p",[t._v("这种方式是==最常用的流程，安全性也最高，它适用于那些有后端的 Web 应用==。授权码通过前端传送，令牌则是储存在后端，而且所有与资源服务器的通信都在后端完成。这样的前后端分离，可以避免令牌泄漏。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/small-universe/file-bed/raw/master/Authentication/OAuth2.0/2021-10-29-13:56:09-image-20210902215709657.png",alt:""}})]),t._v(" "),s("p",[t._v("**第一步，**A 网站提供一个链接，用户点击后就会跳转到 B 网站，授权用户数据给 A 网站使用。下面就是 A 网站跳转 B 网站的一个示意链接。")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("https"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("oauth"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("authorize"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n  response_type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("code"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n  client_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CLIENT_ID")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n  redirect_uri"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CALLBACK_URL")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n  scope"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("read\n")])])])]),t._v(" "),s("p",[t._v("上面 URL 中，"),s("code",[t._v("response_type")]),t._v("参数表示要求返回授权码（"),s("code",[t._v("code")]),t._v("），"),s("code",[t._v("client_id")]),t._v("参数让 B 知道是谁在请求，"),s("code",[t._v("redirect_uri")]),t._v("参数是 B 接受或拒绝请求后的跳转网址，"),s("code",[t._v("scope")]),t._v("参数表示要求的授权范围（这里是只读）。")]),t._v(" "),s("p",[t._v("**第二步，**用户跳转后，B 网站会要求用户登录，然后询问是否同意给予 A 网站授权。用户表示同意，这时 B 网站就会跳回"),s("code",[t._v("redirect_uri")]),t._v("参数指定的网址。跳转时，会传回一个授权码，就像下面这样。")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("https"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("callback"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("code"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AUTHORIZATION_CODE")]),t._v("\n")])])])]),t._v(" "),s("p",[t._v("上面 URL 中，"),s("code",[t._v("code")]),t._v("参数就是授权码。")]),t._v(" "),s("p",[t._v("**第三步，**A 网站拿到授权码以后，就可以在后端，向 B 网站请求令牌。")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("https"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("oauth"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("token"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n client_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CLIENT_ID")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n client_secret"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CLIENT_SECRET")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n grant_type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("authorization_code"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n code"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AUTHORIZATION_CODE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n redirect_uri"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CALLBACK_URL")]),t._v("\n")])])])]),t._v(" "),s("p",[t._v("上面 URL 中，"),s("code",[t._v("client_id")]),t._v("参数和"),s("code",[t._v("client_secret")]),t._v("参数用来让 B 确认 A 的身份（"),s("code",[t._v("client_secret")]),t._v("参数是保密的，因此只能在后端发请求），"),s("code",[t._v("grant_type")]),t._v("参数的值是"),s("code",[t._v("AUTHORIZATION_CODE")]),t._v("，表示采用的授权方式是授权码，"),s("code",[t._v("code")]),t._v("参数是上一步拿到的授权码，"),s("code",[t._v("redirect_uri")]),t._v("参数是令牌颁发后的回调网址。")]),t._v(" "),s("p",[t._v("**第四步，**B 网站收到请求以后，就会颁发令牌。具体做法是向"),s("code",[t._v("redirect_uri")]),t._v("指定的网址，发送一段 JSON 数据,"),s("code",[t._v("access_token")]),t._v("字段就是令牌，A 网站在后端拿到了")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    \n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"access_token"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ACCESS_TOKEN"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"token_type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bearer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"expires_in"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2592000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"refresh_token"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"REFRESH_TOKEN"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scope"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"read"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uid"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100101")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"info"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("h3",{attrs:{id:"第二种方式-隐藏式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二种方式-隐藏式"}},[t._v("#")]),t._v(" 第二种方式：隐藏式")]),t._v(" "),s("p",[t._v("有些 Web 应用是==纯前端应用==，没有后端。这时就不能用上面的方式了，必须将令牌储存在前端。"),s("strong",[t._v('RFC 6749 就规定了第二种方式，允许直接向前端颁发令牌。这种方式没有授权码这个中间步骤，所以称为（授权码）"隐藏式"（implicit）。')])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/small-universe/file-bed/raw/master/Authentication/OAuth2.0/2021-10-29-13:56:09-image-20210902220809001.png",alt:""}})]),t._v(" "),s("p",[t._v("第一步，A 网站提供一个链接，要求用户跳转到 B 网站，授权用户数据给 A 网站使用。")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("https"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("oauth"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("authorize"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n  response_type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("token"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n  client_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CLIENT_ID")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n  redirect_uri"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CALLBACK_URL")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n  scope"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("read\n")])])])]),t._v(" "),s("p",[t._v("上面 URL 中，"),s("code",[t._v("response_type")]),t._v("参数为"),s("code",[t._v("token")]),t._v("，表示要求直接返回令牌。")]),t._v(" "),s("p",[t._v("第二步，用户跳转到 B 网站，登录后同意给予 A 网站授权。这时，B 网站就会跳回"),s("code",[t._v("redirect_uri")]),t._v("参数指定的跳转网址，并且把令牌作为 URL 参数，传给 A 网站。")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("https"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("callback#token"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ACCESS_TOKEN")]),t._v("\n")])])])]),t._v(" "),s("p",[t._v("上面 URL 中，"),s("code",[t._v("token")]),t._v("参数就是令牌，A 网站因此直接在前端拿到令牌。")]),t._v(" "),s("p",[t._v('注意，令牌的位置是 URL 锚点（fragment），而不是查询字符串（querystring），这是因为 OAuth2.0 允许跳转网址是 HTTP 协议，因此存在"中间人攻击"的风险，而浏览器跳转时，锚点不会发到服务器，就减少了泄漏令牌的风险。')]),t._v(" "),s("p",[t._v("这种方式把令牌直接传给前端，是很不安全的。因此，"),s("mark",[t._v("只能用于一些安全要求不高的场景")]),t._v("，并且令牌的有效期必须非常短，通常就是会话期间（session）有效，浏览器关掉，令牌就失效了。")]),t._v(" "),s("h3",{attrs:{id:"第三种方式-密码式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三种方式-密码式"}},[t._v("#")]),t._v(" 第三种方式：密码式")]),t._v(" "),s("p",[s("strong",[t._v('如果你高度信任某个应用，RFC 6749 也允许用户把用户名和密码，直接告诉该应用。该应用就使用你的密码，申请令牌，这种方式称为"密码式"（password）。')])]),t._v(" "),s("p",[s("img",{attrs:{src:"images/image-20210902221654832.png",alt:"image-20210902221654832"}})]),t._v(" "),s("p",[t._v("第一步，A 网站要求用户提供 B 网站的用户名和密码。拿到以后，A 就直接向 B 请求令牌。")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("https"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("oauth"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("token"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n  grant_type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("password"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n  username"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("USERNAME")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n  password"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PASSWORD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n  client_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CLIENT_ID")]),t._v("\n")])])])]),t._v(" "),s("p",[t._v("上面 URL 中，"),s("code",[t._v("grant_type")]),t._v("参数是授权方式，这里的"),s("code",[t._v("password")]),t._v('表示"密码式"，'),s("code",[t._v("username")]),t._v("和"),s("code",[t._v("password")]),t._v("是 B 的用户名和密码。")]),t._v(" "),s("p",[t._v("第二步，B 网站验证身份通过后，直接给出令牌。注意，这时==不需要跳转==，而是把令牌放在 JSON 数据里面，作为 HTTP 回应，A 因此拿到令牌。")]),t._v(" "),s("p",[t._v("这种方式需要用户给出自己的用户名/密码，显然风险很大，因此==只适用于其他授权方式都无法采用的情况==，而且必须是用户高度信任的应用。")]),t._v(" "),s("h3",{attrs:{id:"第四种方式-凭证式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第四种方式-凭证式"}},[t._v("#")]),t._v(" 第四种方式：凭证式")]),t._v(" "),s("p",[s("strong",[t._v("最后一种方式是凭证式（client credentials），"),s("mark",[t._v("适用于没有前端的命令行应用")]),t._v("，即在命令行下请求令牌。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/small-universe/file-bed/raw/master/Authentication/OAuth2.0/2021-10-29-13:56:09-image-20210902221907860.png",alt:""}})]),t._v(" "),s("p",[t._v("第一步，A 应用在命令行向 B 发出请求。")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("https"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("oauth"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("token"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n  grant_type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("client_credentials"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n  client_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CLIENT_ID")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n  client_secret"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CLIENT_SECRET")]),t._v("\n")])])])]),t._v(" "),s("p",[t._v("上面 URL 中，"),s("code",[t._v("grant_type")]),t._v("参数等于"),s("code",[t._v("client_credentials")]),t._v("表示采用凭证式，"),s("code",[t._v("client_id")]),t._v("和"),s("code",[t._v("client_secret")]),t._v("用来让 B 确认 A 的身份。")]),t._v(" "),s("p",[t._v("第二步，B 网站验证通过以后，直接返回令牌。")]),t._v(" "),s("p",[t._v("这种方式给出的令牌，是针对第三方应用的，而不是针对用户的，即有可能多个用户共享同一个令牌。")]),t._v(" "),s("h2",{attrs:{id:"_5-令牌的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-令牌的使用"}},[t._v("#")]),t._v(" 5 | 令牌的使用")]),t._v(" "),s("p",[t._v("A 网站拿到令牌以后，就可以向 B 网站的 API 请求数据了。")]),t._v(" "),s("p",[t._v("此时，每个发到 API 的请求，都必须带有令牌。具体做法是在请求的头信息，加上一个"),s("code",[t._v("Authorization")]),t._v("字段，令牌就放在这个字段里面。")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -H "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Authorization: Bearer ACCESS_TOKEN"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://api.b.com"')]),t._v("\n")])])])]),t._v(" "),s("p",[t._v("上面命令中，"),s("code",[t._v("ACCESS_TOKEN")]),t._v("就是拿到的令牌。")]),t._v(" "),s("h2",{attrs:{id:"_6-更新令牌"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-更新令牌"}},[t._v("#")]),t._v(" 6 | 更新令牌")]),t._v(" "),s("p",[t._v("令牌的有效期到了，如果让用户重新走一遍上面的流程，再申请一个新的令牌，很可能体验不好，而且也没有必要。OAuth2.0 允许用户自动更新令牌。")]),t._v(" "),s("p",[t._v("具体方法是，B 网站颁发令牌的时候，一次性颁发两个令牌，一个用于获取数据，另一个用于获取新的令牌（refresh token 字段）。令牌到期前，用户使用 refresh token 发一个请求，去更新令牌。")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("https"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("oauth"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("token"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n  grant_type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("refresh_token"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n  client_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CLIENT_ID")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n  client_secret"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CLIENT_SECRET")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n  refresh_token"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("REFRESH_TOKEN")]),t._v("\n")])])])]),t._v(" "),s("p",[t._v("上面 URL 中，"),s("code",[t._v("grant_type")]),t._v("参数为"),s("code",[t._v("refresh_token")]),t._v("表示要求更新令牌，"),s("code",[t._v("client_id")]),t._v("参数和"),s("code",[t._v("client_secret")]),t._v("参数用于确认身份，"),s("code",[t._v("refresh_token")]),t._v("参数就是用于更新令牌的令牌。")]),t._v(" "),s("p",[t._v("B 网站验证通过以后，就会颁发新的令牌。")]),t._v(" "),s("h2",{attrs:{id:"_5-第三方登录的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-第三方登录的原理"}},[t._v("#")]),t._v(" 5 | 第三方登录的原理")]),t._v(" "),s("p",[t._v("所谓==第三方登录，实质就是 OAuth 授权==。用户想要登录 A 网站，A 网站让用户提供第三方网站的数据，证明自己的身份。获取第三方网站的身份数据，就需要 OAuth 授权。")]),t._v(" "),s("p",[t._v("A 网站允许 Gitee登录，背后流程：")]),t._v(" "),s("ol",[s("li",[t._v("A 网站让用户跳转到 Gitee。")]),t._v(" "),s("li",[t._v('Gitee要求用户登录，然后询问"A 网站要求获得 xx 权限，你是否同意？"')]),t._v(" "),s("li",[t._v("用户同意，Gitee就会重定向回 A 网站，同时发回一个授权码。")]),t._v(" "),s("li",[t._v("A 网站使用授权码，向 Gitee请求令牌。")]),t._v(" "),s("li",[t._v("Gitee返回令牌.")]),t._v(" "),s("li",[t._v("A 网站使用令牌，向 Gitee请求用户数据。")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://gitee.com/api/v5/oauth_doc#/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Gitee OAuth文档")])])])}),[],!1,null,null,null);a.default=r.exports}}]);